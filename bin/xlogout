#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pygtk
pygtk.require('2.0')
import gtk
import os

class DoTheLogOut:

    # Cancel/exit
    def delete_event(self, widget, event, data=None):
        gtk.main_quit()
        return False

    # Logout
    def logout(self, widget):
        # os.system("echo 'awesome.quit()' | awesome-client")
        # os.system("openbox --exit")
        os.system("pkill dwm")

    # Suspend
    def suspend(self, widget):
        # os.system("gdm-control --reboot && echo 'awesome.quit()' | awesome-client")
        os.system("dbus-send --system  --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 org.freedesktop.login1.Manager.Suspend boolean:'true'")

    # Reboot
    def reboot(self, widget):
        # os.system("gdm-control --reboot && echo 'awesome.quit()' | awesome-client")
        os.system("dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 org.freedesktop.login1.Manager.Reboot boolean:true")

    # Shutdown
    def shutdown(self, widget):
        # os.system("gdm-control --shutdown && echo 'awesome.quit()' | awesome-client")
        os.system("dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 org.freedesktop.login1.Manager.PowerOff boolean:true")

    def __init__(self):
        # Create stock items: labels + icons
        stock_items = (
        #("my-cancel", "Cancel", 0, 0, None),
        #("my-logout", "Log Out", 0, 0, None),
        #("my-reboot", "Reboot", 0, 0, None),
        #("my-shutdown", "Shutdown", 0, 0, None),
        ("my-cancel", "Отмена", 0, 0, None),
        ("my-suspend", "Сон", 0, 0, None),
        ("my-logout", "Выход", 0, 0, None),
        ("my-reboot", "Перезагрузка", 0, 0, None),
        ("my-shutdown", "Выключение", 0, 0, None),
        )

        stock_aliases = (
        ("my-cancel", gtk.STOCK_CLOSE),
        ("my-suspend", gtk.STOCK_APPLY),
        ("my-logout", gtk.STOCK_UNDO),
        ("my-reboot", gtk.STOCK_REFRESH),
        ("my-shutdown", gtk.STOCK_STOP),
        )

        gtk.stock_add(stock_items)

        factory = gtk.IconFactory()
        factory.add_default()

        style = gtk.Style()

        for item, alias in stock_aliases:
            icon_set = style.lookup_icon_set(alias)
            factory.add(item, icon_set)

        # Create a new window
        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        self.window.set_title("Exit? Choose an option:")
        self.window.set_resizable(False)
        self.window.set_position(1)
        self.window.connect("delete_event", self.delete_event)
        self.window.set_border_width(20)

        # Create a box to pack widgets into
        self.box1 = gtk.HBox(False, 0)
        self.window.add(self.box1)

        # Create cancel button
        self.button1 = gtk.Button(stock="my-cancel")
        self.button1.set_border_width(10)
        self.button1.connect("clicked", self.delete_event, "Changed my mind :)")
        self.box1.pack_start(self.button1, True, True, 0)
        self.button1.show()

        # Create logout button
        self.button2 = gtk.Button(stock="my-logout")
        self.button2.set_border_width(10)
        self.button2.connect("clicked", self.logout)
        self.box1.pack_start(self.button2, True, True, 0)
        self.button2.show()

        # Create suspend button
        self.button3 = gtk.Button(stock="my-suspend")
        self.button3.set_border_width(10)
        self.button3.connect("clicked", self.suspend)
        self.box1.pack_start(self.button3, True, True, 0)
        self.button3.show()

        # Create reboot button
        self.button4= gtk.Button(stock="my-reboot")
        self.button4.set_border_width(10)
        self.button4.connect("clicked", self.reboot)
        self.box1.pack_start(self.button4, True, True, 0)
        self.button4.show()

        # Create shutdown button
        self.button5 = gtk.Button(stock="my-shutdown")
        self.button5.set_border_width(10)
        self.button5.connect("clicked", self.shutdown)
        self.box1.pack_start(self.button5, True, True, 0)
        self.button5.show()

        self.box1.show()
        self.window.show()

def main():
    gtk.main()

if __name__ == "__main__":
    gogogo = DoTheLogOut()
    main()

